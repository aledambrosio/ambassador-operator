os: linux
dist: xenial

language: go

go:
  - "1.13"

env:
  global:
    - VERBOSE=1
    - CI=travis
    - IS_CI=true
    - E2E_CLEANUP=true
    - GO111MODULE=on
    - GO15VENDOREXPERIMENT=1
    - PUSH_CHART="true"
    - CHANGE_MINIKUBE_NONE_USER=true

cache:
  directories:
    - $HOME/.cache/go-build
    - $HOME/gopath/pkg/mod

##################################################################################################
# build/lints/tests
##################################################################################################

install:
  - export PATH=~/bin:$PATH
  - make ci/setup

jobs:
  include:
    #####################################################
    # stage 1: lint, build and unit-tests
    #####################################################
    - stage: Build, lint and unit tests
      name: "Build, lint and unit tests"
      script: ls -alF

    #####################################################
    # stage 2: end-to-end tests in multiple clouds
    #####################################################

    # see the ci/infra/providers/CREDENTIALS.md for details on the credentials
    #- stage: End-to-end tests
      #name: "e2e tests in Google Cloud (GKE)"
      ## Run on cron jobs, tagged releases or any builds where commit message contains "test-gke"
      #if: (type IN (cron, api) OR (tag =~ ^v) OR (commit_message =~ test-gke) OR (commit_message =~ test-cloud)) AND NOT (commit_message =~ skip-test OR commit_message =~ skip-gke OR commit_message =~ skip-cloud)
      #env:
        #- CLUSTER_PROVIDER="gke"
        #- CLUSTER_MACHINE="e2-standard-8"
        #- CLUSTER_REUSE=1
        #- CLUSTER_VERSION=1.19.11-gke.2100
      #script: make ci/cluster-setup && make ci/e2e

    ## TODO: Azure credentials need to be updated. I, acookin, do not have the privs one needs to do this.
    ## See: https://github.com/datawire/cluster-providers/blob/a69bba7d368815824e1423a9baf8dc356c92c370/CREDENTIALS.md
    ##- name: "e2e tests in Azure (AKS)"
      ### Run on cron jobs, tagged releases or any builds where commit message contains "test-azure"
      ##if: (type IN (cron, api) OR (tag =~ ^v) OR (commit_message =~ test-azure) OR (commit_message =~ test-cloud)) AND NOT (commit_message =~ skip-test OR commit_message =~ skip-azure OR commit_message =~ skip-cloud)
      ##env:
        ##- CLUSTER_PROVIDER="azure"
        ##- CLUSTER_REUSE=1
      ##script: make ci/cluster-setup && make ci/e2e

    #- name: "e2e tests in a local (1 node) Kubernetes cluster (k3d)"
      #if: NOT (commit_message =~ skip-test)
      #env: CLUSTER_PROVIDER="k3d"
      #script: make ci/cluster-setup && make ci/e2e

    #####################################################
    # stage 3: push images
    #####################################################
    - stage: Push images to repositories
      name: "Push images to repositories"
      env:
        - AMB_OPER_IMAGE_TAG="$TRAVIS_TAG"
      deploy:
        # publish images to Docker.io
        # NOTE: make sure DOCKER_USERNAME/DOCKER_PASSWORD have values for a bot
        - provider: script
          on:
            all_branches: true
          script: ls -alF

          # publish images to Quay.io
          # NOTE: make sure DOCKER_USERNAME/DOCKER_PASSWORD have values for a bot
          #       (from https://quay.io/repository/datawire/ambassador-operator?tab=settings)

    #####################################################
    # stage 4: publish artifacts
    #####################################################
    - stage: Publish artifacts
      name: "Publish artifacts"
      env:
        - AMB_OPER_IMAGE_TAG="$TRAVIS_TAG"
        - REL_REGISTRY="docker.io/datawire"
      deploy:
        - provider: script
          on:
            all_branches: true
          script: ls -alF
        # publish YAMLs to GitHub releases
        # `make ci/release` should have left everything in build/artifacts/*

after_success:
  - make ci/after-success

after_script:
  - make ci/cleanup
